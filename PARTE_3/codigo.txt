#define LED_E 7
#define LED_D 6
#define LED_C 5
#define CATODO_1 A1
#define CATODO_2 A2
#define SWITCH 4
#define BOTON_2 3
#define BOTON_3 2
int primerDigito = 0;
int segundoDigito = 0;
int motor=11;
bool primo = false;

void setup()
{
  pinMode(LED_A, OUTPUT);
  pinMode(LED_B, OUTPUT);
  pinMode(LED_C, OUTPUT);
  pinMode(LED_D, OUTPUT);
  pinMode(LED_E, OUTPUT);
  pinMode(LED_F, OUTPUT);
  pinMode(LED_G, OUTPUT);
  pinMode(CATODO_1, OUTPUT);
  pinMode(CATODO_2, OUTPUT);
  pinMode(SWITCH, INPUT_PULLUP);
  pinMode(BOTON_2, INPUT_PULLUP);
  pinMode(BOTON_3, INPUT_PULLUP);
  Serial.begin(9600);
}

void loop()
{
  int LDR = analogRead(A0);//obtiene el valor dado por la fotoresistencia
  Serial.println(LDR);
  //convierte los valores del contador a PWM para controlar el motor
  int velocidad = map((primerDigito + (segundoDigito *10)),100,0,0,255);
  //sube la velocidad del motor en relacion al contador
  analogWrite(motor,velocidad);
  for(int i=0; i<=(LDR/10); i++)
    //controla la velocidad del contador segun la fotoresistencia
  {
    //multiplexaciÃ³n
     digitalWrite(CATODO_1,HIGH);
     digitalWrite(CATODO_2,HIGH);
     delay(1);
     numerosDisplay(segundoDigito);
     digitalWrite(CATODO_1,LOW);
     digitalWrite(CATODO_2,HIGH);
     delay(4);
      
     digitalWrite(CATODO_1,HIGH);
     digitalWrite(CATODO_2,HIGH);
     delay(1);
     numerosDisplay(primerDigito);
     digitalWrite(CATODO_1,HIGH);
     digitalWrite(CATODO_2,LOW);
     delay(4);
  }
  //este if depende del switch el cual siendo = 0 va sumando
  //de a 1 el contador, volviendo a 0 cuando llega a 99;
  //y en caso de ser = 1 va mostrando los primos del 0 al 99
  if (digitalRead(SWITCH) == 0)
  {
    primerDigito +=1;
    if(primerDigito==10)
     {
       primerDigito=0;
       segundoDigito +=1;
       if(segundoDigito==10)
     	{
          segundoDigito=0;
        }
      }
  }
  else if (digitalRead(SWITCH) == 1)
  {
    primerDigito +=1;
    while (esPrimo(primerDigito + (segundoDigito *10)) == false)
           {
              primerDigito +=1;
              if(primerDigito>10)
              {
                 primerDigito-=10;
                 segundoDigito +=1;
                 if(segundoDigito==10)
                 {
          			segundoDigito=0;
                 }
              }
           }
      
  }
}

void numerosDisplay(int numero)
  //se encarga de mostrar el numero dado en el display
{
  digitalWrite(LED_A, LOW);
  digitalWrite(LED_B, LOW);
  digitalWrite(LED_C, LOW);
  digitalWrite(LED_D, LOW);
  digitalWrite(LED_E, LOW);
  digitalWrite(LED_F, LOW);
  digitalWrite(LED_G, LOW);
  switch(numero)
  {
    case 0:
    	digitalWrite(LED_A, HIGH);
        digitalWrite(LED_B, HIGH);
        digitalWrite(LED_C, HIGH);
        digitalWrite(LED_D, HIGH);
        digitalWrite(LED_E, HIGH);
        digitalWrite(LED_F, HIGH);
    	break;
    case 1:
    	digitalWrite(LED_B, HIGH);
      	digitalWrite(LED_C, HIGH);
    	break;
    case 2:
        digitalWrite(LED_A, HIGH);
        digitalWrite(LED_B, HIGH);
        digitalWrite(LED_D, HIGH);
        digitalWrite(LED_E, HIGH);
        digitalWrite(LED_G, HIGH);
    	break;
    case 3:
       	digitalWrite(LED_A, HIGH);
        digitalWrite(LED_B, HIGH);
        digitalWrite(LED_C, HIGH);
    	digitalWrite(LED_D, HIGH);
        digitalWrite(LED_G, HIGH);
    	break;
    case 4:
        digitalWrite(LED_B, HIGH);
        digitalWrite(LED_C, HIGH);
        digitalWrite(LED_F, HIGH);
        digitalWrite(LED_G, HIGH);
    	break;
    case 5:
    	digitalWrite(LED_A, HIGH);
        digitalWrite(LED_C, HIGH);
        digitalWrite(LED_D, HIGH);
        digitalWrite(LED_F, HIGH);
        digitalWrite(LED_G, HIGH);
    	break;
    case 6:
    	digitalWrite(LED_A, HIGH);
        digitalWrite(LED_C, HIGH);
        digitalWrite(LED_D, HIGH);
        digitalWrite(LED_E, HIGH);
        digitalWrite(LED_F, HIGH);
        digitalWrite(LED_G, HIGH);
    	break;
    case 7:
    	digitalWrite(LED_A, HIGH);
        digitalWrite(LED_B, HIGH);
        digitalWrite(LED_C, HIGH);
    case 8:
    	digitalWrite(LED_A, HIGH);
        digitalWrite(LED_B, HIGH);
        digitalWrite(LED_C, HIGH);
        digitalWrite(LED_D, HIGH);
        digitalWrite(LED_E, HIGH);
        digitalWrite(LED_F, HIGH);
        digitalWrite(LED_G, HIGH);
    	break;
    case 9:
    	digitalWrite(LED_A, HIGH);
        digitalWrite(LED_B, HIGH);
    	digitalWrite(LED_C, HIGH);
        digitalWrite(LED_F, HIGH);
        digitalWrite(LED_G, HIGH);
  }
  
}
bool esPrimo(int digit)
  //devuelve un boleano siendo true si el numero dado
  //es primo o false en caso de no ser
{
  int i=2;
  if(digit == 1 || digit == 0)
  {
    primo = false;
  }
  else
  {
    primo = true;
    for(i;i<digit;i++)
    {
      if(digit % i == 0)
        primo = false;
    }
  }
  return primo;
}